plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.chaquo.python'  // Must come after com.android.application
}

afterEvaluate {
    def assetsSrcDir = "src/main/assets/source"
    delete assetsSrcDir
    mkdir assetsSrcDir
    for (filename in ["src/main/python/chaquopy/demo/ui_demo.py",
                      "src/main/java/com/chaquo/python/demo/JavaDemoActivity.java"]) {
        assert file(filename).exists()
        copy {
            from filename
            into assetsSrcDir
        }
    }
}

android {
    namespace "com.chaquo.python.demo"
    compileSdkVersion 33

    defaultConfig {
        applicationId "com.chaquo.python.demo3"
        minSdkVersion 21
        targetSdkVersion 33

        versionName rootProject.version
        def verParsed = rootProject.version.split(/\./).collect { Integer.parseInt(it) }
        versionCode ((verParsed[0] * 1000000) + (verParsed[1] * 1000) + (verParsed[2] * 10))

        python {
            // Android UI demo
            pip {
                install "Pygments==2.2.0"   // Also used in Java API demo
            }
            staticProxy "chaquopy.demo.ui_demo"

            // Python unit tests
            pip {
                // In newer versions, importing murmurhash automatically imports and
                // extracts murmurhash/mrmr.so, which would complicate the tests.
                install "murmurhash==0.28.0"  // Requires chaquopy-libcxx

                // Because we set pyc.src to false, we must test extractPackages via pip.
                install ("../../product/gradle-plugin/src/test/integration/data/" +
                        "ExtractPackages/change_1/app/extract_packages")
            }
            extractPackages "ep_bravo", "ep_charlie.one"
            staticProxy("chaquopy.test.static_proxy.basic", "chaquopy.test.static_proxy.header",
                        "chaquopy.test.static_proxy.method")
            pyc {
                // For testing bytecode compilation on device, and also to include test source
                // code in stack traces.
                src false

                // For testing bytecode compilation during build.
                pip true
            }
        }

        ndk {
            abiFilters "armeabi-v7a", "arm64-v8a", "x86", "x86_64"
        }

        // Chaquopy generates extra internal-use constructors on static proxy classes.
        lintOptions {
            disable "ValidFragment"
        }

        // Remove other languages imported from Android support libraries.
        resConfigs "en"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    // For testing with minifyEnabled (see release/README.md).
    buildTypes {
        releaseMinify {
            initWith release
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    def keystore = file('../chaquo.jks')
    if (keystore.exists()) {
        signingConfigs {
            config {
                storeFile keystore
                keyAlias 'key0'
                keyPassword 'android'
                storePassword 'android'
            }
        }
        buildTypes.all { it.signingConfig signingConfigs.config }
    }

    sourceSets {
        for (path in [
            "../../product/runtime/src/test",   // Unit tests
            "src/utils"                         // Files shared with pkgtest app
        ]) {
            main {
                java { srcDir "$path/java" }
                python { srcDir "$path/python" }
                res { srcDir "$path/res" }
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    // appcompat version 1.2.0 is required to fix an incompatibility with WebView on API level
    // 21 (https://stackoverflow.com/questions/41025200).
    implementation 'androidx.appcompat:appcompat:1.2.0-beta01'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.1.0'
    implementation 'androidx.preference:preference:1.1.1'
    implementation 'junit:junit:4.12'
    implementation 'org.hamcrest:hamcrest-library:2.2'

    testImplementation 'junit:junit:4.12'
}
