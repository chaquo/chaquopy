diff --git a/pyproject.toml b/pyproject.toml
index cbba3cb..1c880d8 100644
--- a/pyproject.toml
+++ b/pyproject.toml
@@ -5,7 +5,7 @@ requires = [
     # as oldest-support-numpy was (customizable with a NPY_TARGET_VERSION
     # define).  For older Python versions (where NumPy 1.25 is not yet available)
     # continue using oldest-support-numpy.
-    "oldest-supported-numpy; python_version<'3.9'",
+    "numpy==1.19.5; python_version<'3.9'", # Use version available in Chaquopy package index
     "numpy>=1.25; python_version>='3.9'",
     "setuptools>=61.0.0",
 ]
diff --git a/setup.py b/setup.py
index d49d722..e041ba5 100644
--- a/setup.py
+++ b/setup.py
@@ -81,31 +81,34 @@ def get_geos_paths():
             "other link args for compiling against a GEOS version >=%s.",
             MIN_GEOS_VERSION,
         )
-        return {}
+        # return {} Chaquopy: Continue anyway
 
     def version_tuple(ver):
         return tuple(int(itm) if itm.isnumeric() else itm for itm in ver.split("."))
 
-    if version_tuple(geos_version) < version_tuple(MIN_GEOS_VERSION):
-        raise ImportError(
-            f"GEOS version should be >={MIN_GEOS_VERSION}, found {geos_version}"
-        )
+    # Chaquopy: Skip the following block
+    # if version_tuple(geos_version) < version_tuple(MIN_GEOS_VERSION):
+    #    raise ImportError(
+    #        f"GEOS version should be >={MIN_GEOS_VERSION}, found {geos_version}"
+    #    )
 
-    libraries = []
+    libraries = ["geos_c"] # Chaquopy
     library_dirs = []
     include_dirs = ["./src"]
     extra_link_args = []
-    for item in get_geos_config("--cflags").split():
-        if item.startswith("-I"):
-            include_dirs.extend(item[2:].split(":"))
-
-    for item in get_geos_config("--clibs").split():
-        if item.startswith("-L"):
-            library_dirs.extend(item[2:].split(":"))
-        elif item.startswith("-l"):
-            libraries.append(item[2:])
-        else:
-            extra_link_args.append(item)
+    
+    if geos_version: # Chaquopy: Skip
+        for item in get_geos_config("--cflags").split():
+            if item.startswith("-I"):
+                include_dirs.extend(item[2:].split(":"))
+
+        for item in get_geos_config("--clibs").split():
+            if item.startswith("-L"):
+                library_dirs.extend(item[2:].split(":"))
+            elif item.startswith("-l"):
+                libraries.append(item[2:])
+            else:
+                extra_link_args.append(item)
 
     return {
         "include_dirs": include_dirs,
@@ -125,7 +128,9 @@ class build_ext(_build_ext):
 
         # Prevent numpy from thinking it is still in its setup process:
         try:
-            del builtins.__NUMPY_SETUP__
+            # Chaquopy
+            builtins.__NUMPY_SETUP__ = True  # Prevent the rest of NumPy from being imported.
+            # del builtins.__NUMPY_SETUP__
         except AttributeError:
             pass
 
